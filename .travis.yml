language: cpp
dist: trusty

#
# Build Dependencies
#
before_script:
  - sudo apt update
  - sudo apt install valgrind
  - sudo apt install cmake
  - sudo apt install libgtest-dev
  - pip install --user cpp-coveralls
  - cd /usr/src/gtest
  - sudo cmake CMakeLists.txt || (cat CMakeFiles/CMakeError.log && CMakeFiles/CMakeOutput.log)
  - sudo make
  - sudo cp *.a /usr/lib
  - cd -

  #
  # Build Folder
  #
  - mkdir build
  - cd build

  #
  # Update / Install CMake
  #
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      mkdir -p external/cmake
      pushd external/cmake
      wget https://cmake.org/files/v3.8/cmake-3.8.0-Linux-x86_64.sh
      chmod +x cmake-*-Linux-x86_64.sh
      ./cmake-*-Linux-x86_64.sh --exclude-subdir --skip-license
      export PATH="${PWD}/bin:$PATH"
      popd
    else
      if ! brew ls --version cmake &>/dev/null; then brew update; brew install cmake; fi
    fi
#
# Build Matrix
#
matrix:
  include:
    # Git Check
    #
    - os: linux
      env:
        - TEST="Git Check"
      script:
        - |
          if [[ -n $(git diff --check HEAD^) ]]; then
            echo "You must remove whitespace before submitting a pull request"
            echo ""
            git diff --check HEAD^
            exit -1
          fi

    #
    # Clang Tidy
    #
    - os: linux
      env:
        - TEST="Clang Tidy"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
            - clang-tidy-4.0
            - gcc-6
            - g++-6
      script:
        - cmake -DENABLE_CLANG_TIDY=ON -DCMAKE_CXX_COMPILER="g++-6" ..
        - make
        - make tidy > output.txt
        - |
          if [[ -n $(grep "warning: " output.txt) ]] || [[ -n $(grep "error: " output.txt) ]]; then
              echo "You must pass the clang tidy checks before submitting a pull request"
              echo ""
              grep --color -E '^|warning: |error: ' output.txt
              exit -1;
          else
              echo -e "\033[1;32m\xE2\x9C\x93 passed:\033[0m $1";
          fi
    #
    # Coverity Scan
    #
    - os: linux
      env:
        - TEST="Coverity Scan"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
        coverity_scan:
          project:
            name: "ainfosec/ci_helloworld"
            description: "A simple example of how to setup a complete CI environment for C and C++"
          notification_email: rianquinn@gmail.com
          build_command_prepend: "cmake -DCMAKE_CXX_COMPILER=g++-6 .."
          build_command: "make"
          branch_pattern: master
      script:
        - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

    #
    # Codecov
    #
    - os: linux
      env:
        - TEST="Codecov"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
      script:
        - cmake -shared -DENABLE_COVERAGE=ON -DCMAKE_CXX_COMPILER="g++-6" ..
        - make
        - make test
        - cd ..
        - bash <(curl -s https://codecov.io/bash)

    #
    # Google Address Sanitizer
    #
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
      env:
        - TEST="Google Address Sanitizer"
      script:
        - cmake -shared -DENABLE_ASAN=ON -DCMAKE_CXX_COMPILER="g++-6" ..
        - make
        - make test

    #
    # Google Undefined Sanitizer
    #
    - os: linux
      env:
        - TEST="Google Undefined Sanitizer"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
      script:
        - cmake -shared -DENABLE_USAN=ON -DCMAKE_CXX_COMPILER="g++-6" ..
        - make
        - make test

    #
    # Google Thread Sanitizer
    #
    - os: linux
      env:
        - TEST="Google Thread Sanitizer"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
      script:
        - cmake -DENABLE_TSAN=ON -DCMAKE_CXX_COMPILER="g++-6" ..
        - make
        - make test

    #
    # Valgrind
    #
    - os: linux
      env:
        - TEST="Valgrind"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
            - valgrind
      script:
        - cmake -DCMAKE_CXX_COMPILER="g++-6" ..
        - make
        - ctest -T memcheck

    #
    # G++ 6
    #
    - os: linux
      env:
        - TEST="G++ 6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
      script:
        - cmake -DCMAKE_CXX_COMPILER="g++-6" ..
        - make
        - make test


    #
    # Clang 3.9
    #
    - os: linux
      env:
        - TEST="Clang 3.9"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
            - gcc-6
            - g++-6
      script:
        - cmake -DCMAKE_C_COMPILER=clang-3.9 -DCMAKE_CXX_COMPILER=clang++-3.9 ..
        - make
        - make test